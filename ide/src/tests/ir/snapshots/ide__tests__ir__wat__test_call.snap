---
source: src/tests/ir/wat.rs
expression: "format!(\"{}\", ir . buffer())"

---
define 0 (param %0) (result 1) (define %0 %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13) {
BLOCK 0
%1 = %0
%2 = 1
%3 = %2 op %1
IF %3 THEN GOTO 1 ELSE GOTO 2
BLOCK 1 
%4 = 1
GOTO 3 // BLOCK ended for 1
BLOCK 2 // THEN block for 1
%5 = %0
%6 = 2
%7 = %6 op %5
%8 <- CALL 0(7)
%9 = %0
%10 = 1
%11 = %10 op %9
%12 <- CALL 0(11)
%13 = %12 op %11
GOTO 3 // BLOCK ended for 1
BLOCK 3 // THEN block for 2
KILL %12
KILL %11
KILL %10
KILL %9
KILL %8
KILL %7
KILL %6
KILL %5
KILL %4
KILL %3
KILL %2
KILL %1
RETURN %13;
};
define 1 (param %0) (result 1) (define %0 %1 %2 %3 %4 %5 %6 %7) {
BLOCK 4
%1 = %0
%2 = %1 op %0
IF %2 THEN GOTO 5 ELSE GOTO 6
BLOCK 5 
%3 = 44
GOTO 7 // BLOCK ended for 5
BLOCK 6 // THEN block for 5
%4 = %0
%5 = 1
%6 = %5 op %4
%7 <- CALL 2(6)
GOTO 7 // BLOCK ended for 5
BLOCK 7 // THEN block for 6
KILL %6
KILL %5
KILL %4
KILL %3
KILL %2
KILL %1
RETURN %7;
};
define 2 (param %0) (result 1) (define %0 %1 %2 %3 %4 %5 %6 %7) {
BLOCK 8
%1 = %0
%2 = %1 op %0
IF %2 THEN GOTO 9 ELSE GOTO 10
BLOCK 9 
%3 = 99
GOTO 11 // BLOCK ended for 9
BLOCK 10 // THEN block for 9
%4 = %0
%5 = 1
%6 = %5 op %4
%7 <- CALL 1(6)
GOTO 11 // BLOCK ended for 9
BLOCK 11 // THEN block for 10
KILL %6
KILL %5
KILL %4
KILL %3
KILL %2
KILL %1
RETURN %7;
};

