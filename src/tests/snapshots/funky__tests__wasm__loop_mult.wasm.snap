---
source: src/tests/wasm.rs
expression: "format!(\"{:#?}\", engine)"

---
Engine {
    module: ModuleInstance {
        start: 0,
        code: [
            FunctionBody {
                locals: [
                    LocalEntry {
                        count: 1,
                        ty: I64,
                    },
                ],
                code: [
                    InstructionWrapper {
                        instruction_id: 1,
                        instruction: OP_LOCAL_GET(
                            0,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 2,
                        instruction: OP_LOCAL_GET(
                            3,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 3,
                        instruction: OP_I64_EXTEND_I32_U,
                    },
                    InstructionWrapper {
                        instruction_id: 4,
                        instruction: OP_LOCAL_GET(
                            4,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 5,
                        instruction: OP_I64_EXTEND_I32_U,
                    },
                    InstructionWrapper {
                        instruction_id: 6,
                        instruction: OP_I64_CONST(
                            32,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 7,
                        instruction: OP_I64_SHL,
                    },
                    InstructionWrapper {
                        instruction_id: 8,
                        instruction: OP_I64_OR,
                    },
                    InstructionWrapper {
                        instruction_id: 9,
                        instruction: OP_LOCAL_GET(
                            1,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 10,
                        instruction: OP_I64_EXTEND_I32_U,
                    },
                    InstructionWrapper {
                        instruction_id: 11,
                        instruction: OP_LOCAL_GET(
                            2,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 12,
                        instruction: OP_I64_EXTEND_I32_U,
                    },
                    InstructionWrapper {
                        instruction_id: 13,
                        instruction: OP_I64_CONST(
                            32,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 14,
                        instruction: OP_I64_SHL,
                    },
                    InstructionWrapper {
                        instruction_id: 15,
                        instruction: OP_I64_OR,
                    },
                    InstructionWrapper {
                        instruction_id: 16,
                        instruction: OP_I64_ADD,
                    },
                    InstructionWrapper {
                        instruction_id: 17,
                        instruction: OP_LOCAL_TEE(
                            5,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 18,
                        instruction: OP_I64_STORE_32(
                            MemArg {
                                align: 2,
                                offset: 0,
                            },
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 19,
                        instruction: OP_LOCAL_GET(
                            0,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 20,
                        instruction: OP_LOCAL_GET(
                            5,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 21,
                        instruction: OP_I64_CONST(
                            32,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 22,
                        instruction: OP_I64_SHR_U,
                    },
                    InstructionWrapper {
                        instruction_id: 23,
                        instruction: OP_I64_STORE_32(
                            MemArg {
                                align: 2,
                                offset: 4,
                            },
                        ),
                    },
                ],
            },
            FunctionBody {
                locals: [],
                code: [
                    InstructionWrapper {
                        instruction_id: 27,
                        instruction: OP_LOCAL_GET(
                            0,
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 28,
                        instruction: OP_I32_EQZ,
                    },
                    InstructionWrapper {
                        instruction_id: 29,
                        instruction: OP_IF(
                            Empty,
                            CodeBlock {
                                id: 1,
                                instructions: [
                                    InstructionWrapper {
                                        instruction_id: 24,
                                        instruction: OP_I32_CONST(
                                            0,
                                        ),
                                    },
                                    InstructionWrapper {
                                        instruction_id: 25,
                                        instruction: OP_RETURN,
                                    },
                                ],
                            },
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 30,
                        instruction: OP_LOOP(
                            Empty,
                            CodeBlock {
                                id: 2,
                                instructions: [
                                    InstructionWrapper {
                                        instruction_id: 26,
                                        instruction: OP_BR(
                                            0,
                                        ),
                                    },
                                ],
                            },
                        ),
                    },
                    InstructionWrapper {
                        instruction_id: 31,
                        instruction: OP_UNREACHABLE,
                    },
                ],
            },
        ],
        fn_types: [
            FunctionSignature {
                param_types: [
                    I32,
                    I32,
                    I32,
                    I32,
                    I32,
                ],
                return_types: [],
            },
            FunctionSignature {
                param_types: [
                    I32,
                ],
                return_types: [
                    I32,
                ],
            },
        ],
        funcaddrs: [
            FuncAddr(
                0,
            ),
            FuncAddr(
                1,
            ),
        ],
        tableaddrs: [],
        memaddrs: [
            0,
        ],
        globaladdrs: [],
        exports: [
            ExportInstance {
                name: "memory",
                value: Memory {
                    ty: 0,
                },
            },
            ExportInstance {
                name: "block",
                value: Function {
                    ty: 0,
                },
            },
            ExportInstance {
                name: "my_loop",
                value: Function {
                    ty: 1,
                },
            },
        ],
    },
    started: false,
    store: Store {
        funcs: [
            FuncInstance {
                ty: FunctionSignature {
                    param_types: [
                        I32,
                        I32,
                        I32,
                        I32,
                        I32,
                    ],
                    return_types: [],
                },
                code: FunctionBody {
                    locals: [
                        LocalEntry {
                            count: 1,
                            ty: I64,
                        },
                    ],
                    code: [
                        InstructionWrapper {
                            instruction_id: 1,
                            instruction: OP_LOCAL_GET(
                                0,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 2,
                            instruction: OP_LOCAL_GET(
                                3,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 3,
                            instruction: OP_I64_EXTEND_I32_U,
                        },
                        InstructionWrapper {
                            instruction_id: 4,
                            instruction: OP_LOCAL_GET(
                                4,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 5,
                            instruction: OP_I64_EXTEND_I32_U,
                        },
                        InstructionWrapper {
                            instruction_id: 6,
                            instruction: OP_I64_CONST(
                                32,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 7,
                            instruction: OP_I64_SHL,
                        },
                        InstructionWrapper {
                            instruction_id: 8,
                            instruction: OP_I64_OR,
                        },
                        InstructionWrapper {
                            instruction_id: 9,
                            instruction: OP_LOCAL_GET(
                                1,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 10,
                            instruction: OP_I64_EXTEND_I32_U,
                        },
                        InstructionWrapper {
                            instruction_id: 11,
                            instruction: OP_LOCAL_GET(
                                2,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 12,
                            instruction: OP_I64_EXTEND_I32_U,
                        },
                        InstructionWrapper {
                            instruction_id: 13,
                            instruction: OP_I64_CONST(
                                32,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 14,
                            instruction: OP_I64_SHL,
                        },
                        InstructionWrapper {
                            instruction_id: 15,
                            instruction: OP_I64_OR,
                        },
                        InstructionWrapper {
                            instruction_id: 16,
                            instruction: OP_I64_ADD,
                        },
                        InstructionWrapper {
                            instruction_id: 17,
                            instruction: OP_LOCAL_TEE(
                                5,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 18,
                            instruction: OP_I64_STORE_32(
                                MemArg {
                                    align: 2,
                                    offset: 0,
                                },
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 19,
                            instruction: OP_LOCAL_GET(
                                0,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 20,
                            instruction: OP_LOCAL_GET(
                                5,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 21,
                            instruction: OP_I64_CONST(
                                32,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 22,
                            instruction: OP_I64_SHR_U,
                        },
                        InstructionWrapper {
                            instruction_id: 23,
                            instruction: OP_I64_STORE_32(
                                MemArg {
                                    align: 2,
                                    offset: 4,
                                },
                            ),
                        },
                    ],
                },
            },
            FuncInstance {
                ty: FunctionSignature {
                    param_types: [
                        I32,
                    ],
                    return_types: [
                        I32,
                    ],
                },
                code: FunctionBody {
                    locals: [],
                    code: [
                        InstructionWrapper {
                            instruction_id: 27,
                            instruction: OP_LOCAL_GET(
                                0,
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 28,
                            instruction: OP_I32_EQZ,
                        },
                        InstructionWrapper {
                            instruction_id: 29,
                            instruction: OP_IF(
                                Empty,
                                CodeBlock {
                                    id: 1,
                                    instructions: [
                                        InstructionWrapper {
                                            instruction_id: 24,
                                            instruction: OP_I32_CONST(
                                                0,
                                            ),
                                        },
                                        InstructionWrapper {
                                            instruction_id: 25,
                                            instruction: OP_RETURN,
                                        },
                                    ],
                                },
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 30,
                            instruction: OP_LOOP(
                                Empty,
                                CodeBlock {
                                    id: 2,
                                    instructions: [
                                        InstructionWrapper {
                                            instruction_id: 26,
                                            instruction: OP_BR(
                                                0,
                                            ),
                                        },
                                    ],
                                },
                            ),
                        },
                        InstructionWrapper {
                            instruction_id: 31,
                            instruction: OP_UNREACHABLE,
                        },
                    ],
                },
            },
        ],
        tables: [],
        memory: [
            MemoryInstance {
                data (only length): 1114112,
                max: None,
            },
        ],
        stack: [],
        ctrl_stack: [],
        globals: [],
    },
    debugger: RelativeProgramCounter(
        0,
    ),
}
