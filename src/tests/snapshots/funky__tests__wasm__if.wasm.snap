---
source: src/tests/wasm.rs
expression: "format!(\"{:#?}\", engine)"
---
Engine {
    module: ModuleInstance {
        start: 0,
        code: [
            FunctionBody {
                locals: [],
                code: [],
            },
            FunctionBody {
                locals: [],
                code: [
                    Var(
                        OP_LOCAL_GET(
                            0,
                        ),
                    ),
                    Ctrl(
                        OP_IF(
                            Empty,
                            CodeBlock {
                                id: 1,
                                instructions: [],
                            },
                        ),
                    ),
                    Var(
                        OP_LOCAL_GET(
                            0,
                        ),
                    ),
                    Ctrl(
                        OP_IF(
                            Empty,
                            CodeBlock {
                                id: 1,
                                instructions: [],
                            },
                        ),
                    ),
                    Var(
                        OP_LOCAL_GET(
                            0,
                        ),
                    ),
                    Ctrl(
                        OP_IF(
                            Empty,
                            CodeBlock {
                                id: 1,
                                instructions: [],
                            },
                        ),
                    ),
                    Var(
                        OP_LOCAL_GET(
                            0,
                        ),
                    ),
                    Ctrl(
                        OP_IF(
                            Empty,
                            CodeBlock {
                                id: 1,
                                instructions: [],
                            },
                        ),
                    ),
                ],
            },
            FunctionBody {
                locals: [],
                code: [
                    Var(
                        OP_LOCAL_GET(
                            0,
                        ),
                    ),
                    Ctrl(
                        OP_IF(
                            Empty,
                            CodeBlock {
                                id: 1,
                                instructions: [
                                    Ctrl(
                                        OP_NOP,
                                    ),
                                ],
                            },
                        ),
                    ),
                    Var(
                        OP_LOCAL_GET(
                            0,
                        ),
                    ),
                    Ctrl(
                        OP_IF_AND_ELSE(
                            Empty,
                            CodeBlock {
                                id: 1,
                                instructions: [
                                    Ctrl(
                                        OP_NOP,
                                    ),
                                ],
                            },
                            CodeBlock {
                                id: 2,
                                instructions: [
                                    Ctrl(
                                        OP_NOP,
                                    ),
                                ],
                            },
                        ),
                    ),
                    Var(
                        OP_LOCAL_GET(
                            0,
                        ),
                    ),
                    Ctrl(
                        OP_IF_AND_ELSE(
                            ValueType(
                                I32,
                            ),
                            CodeBlock {
                                id: 1,
                                instructions: [
                                    Num(
                                        OP_I32_CONST(
                                            7,
                                        ),
                                    ),
                                ],
                            },
                            CodeBlock {
                                id: 2,
                                instructions: [
                                    Num(
                                        OP_I32_CONST(
                                            8,
                                        ),
                                    ),
                                ],
                            },
                        ),
                    ),
                ],
            },
        ],
        fn_types: [
            FunctionSignature {
                param_types: [],
                return_types: [],
            },
            FunctionSignature {
                param_types: [
                    I32,
                ],
                return_types: [],
            },
            FunctionSignature {
                param_types: [
                    I32,
                ],
                return_types: [
                    I32,
                ],
            },
        ],
        funcaddrs: [
            0,
            1,
            2,
        ],
        tableaddrs: [],
        memaddrs: [],
        globaladdrs: [],
        exports: [
            ExportInstance {
                name: "empty",
                value: Function {
                    ty: 1,
                },
            },
            ExportInstance {
                name: "singular",
                value: Function {
                    ty: 2,
                },
            },
        ],
    },
    started: false,
    store: Store {
        funcs: [
            FuncInstance {
                ty: FunctionSignature {
                    param_types: [],
                    return_types: [],
                },
                code: FunctionBody {
                    locals: [],
                    code: [],
                },
            },
            FuncInstance {
                ty: FunctionSignature {
                    param_types: [
                        I32,
                    ],
                    return_types: [],
                },
                code: FunctionBody {
                    locals: [],
                    code: [
                        Var(
                            OP_LOCAL_GET(
                                0,
                            ),
                        ),
                        Ctrl(
                            OP_IF(
                                Empty,
                                CodeBlock {
                                    id: 1,
                                    instructions: [],
                                },
                            ),
                        ),
                        Var(
                            OP_LOCAL_GET(
                                0,
                            ),
                        ),
                        Ctrl(
                            OP_IF(
                                Empty,
                                CodeBlock {
                                    id: 1,
                                    instructions: [],
                                },
                            ),
                        ),
                        Var(
                            OP_LOCAL_GET(
                                0,
                            ),
                        ),
                        Ctrl(
                            OP_IF(
                                Empty,
                                CodeBlock {
                                    id: 1,
                                    instructions: [],
                                },
                            ),
                        ),
                        Var(
                            OP_LOCAL_GET(
                                0,
                            ),
                        ),
                        Ctrl(
                            OP_IF(
                                Empty,
                                CodeBlock {
                                    id: 1,
                                    instructions: [],
                                },
                            ),
                        ),
                    ],
                },
            },
            FuncInstance {
                ty: FunctionSignature {
                    param_types: [
                        I32,
                    ],
                    return_types: [
                        I32,
                    ],
                },
                code: FunctionBody {
                    locals: [],
                    code: [
                        Var(
                            OP_LOCAL_GET(
                                0,
                            ),
                        ),
                        Ctrl(
                            OP_IF(
                                Empty,
                                CodeBlock {
                                    id: 1,
                                    instructions: [
                                        Ctrl(
                                            OP_NOP,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        Var(
                            OP_LOCAL_GET(
                                0,
                            ),
                        ),
                        Ctrl(
                            OP_IF_AND_ELSE(
                                Empty,
                                CodeBlock {
                                    id: 1,
                                    instructions: [
                                        Ctrl(
                                            OP_NOP,
                                        ),
                                    ],
                                },
                                CodeBlock {
                                    id: 2,
                                    instructions: [
                                        Ctrl(
                                            OP_NOP,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        Var(
                            OP_LOCAL_GET(
                                0,
                            ),
                        ),
                        Ctrl(
                            OP_IF_AND_ELSE(
                                ValueType(
                                    I32,
                                ),
                                CodeBlock {
                                    id: 1,
                                    instructions: [
                                        Num(
                                            OP_I32_CONST(
                                                7,
                                            ),
                                        ),
                                    ],
                                },
                                CodeBlock {
                                    id: 2,
                                    instructions: [
                                        Num(
                                            OP_I32_CONST(
                                                8,
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            },
        ],
        tables: [],
        memory: [],
        stack: [],
        globals: [],
    },
}
